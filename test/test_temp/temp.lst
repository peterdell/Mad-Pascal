mads 2.1.5
    35 				  opt l+
   106
   107 				.print 'ZPAGE: ',zpage,'..',zpend-1
   107 				ZPAGE: $0000..$0053
   108
   109 				.print 'RTBUF: ',@buf,'..',@buf+255
   109 				RTBUF: $0200..$02FF
   110
   111 				.print 'RTLIB: ',RTLIB,'..',*-1
   111 				RTLIB: $1003..$1002
   112
   113 				; ------------------------------------------------------------
   114
   115 1003			START
   116 1003 BA				tsx
   117 1004 8E 84 10			stx MAIN.@halt+1
   118
   119 = 000D			VLEN	= VARDATASIZE-VARINITSIZE
   120 = 108B			VADR	= DATAORIGIN+VARINITSIZE
   121
   122 					ift (VLEN > 0) && (VLEN <= 256)
   123 1007 A2 F3			ldx #256-VLEN
   124 1009 A9 00			lda #$00
   125 100B 9D 98 0F E8 D0 FA		sta:rne VADR+VLEN-256,x+
   126 					eli VLEN>256
   127 					m@init
   128 					eif
   129
   130 				.ifdef psptr
   131 					mwa #PROGRAMSTACK psptr
   132 				.fi
   133
   134 1011 A2 00			ldx #$00
   135 1013 86 00			stx bp						; BP = 0
   136
   137 1015 CA				dex						; X = 255
   138
   139 1016				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: temp.a65]
     3 1016 20 1C 10			jsr MAIN.SYSTEM.@UnitInit
Source: temp.a65
   140
   141 1019			.local	MAIN						; PROCEDURE
   142
   143 1019 4C 25 10			jmp l_0004
   144
   145 				; ------------------------------------------------------------
   146
   147 101C			.local	SYSTEM						; UNIT
   148
   149 				; ------------------------------------------------------------
   150 				; ------------------------------------------------------------
   151 101C			@UnitInit
   152
   153 101C 60				rts
   154
   155 				; ------------------------------------------------------------
   156
   157 = 0648			M_PI_2	= $0648
   158 = 0192			D_PI_2	= $0192
   159 = 0004			D_PI_180	= $04
   160 = 1087			DATESEPARATOR	= DATAORIGIN+$0000
   161 = 1088			SCREENWIDTH	= DATAORIGIN+$0001
   162 = 108A			SCREENHEIGHT	= DATAORIGIN+$0003
   163 = 0000			adr.MEM	= $00
   164 101D			.var MEM	= adr.MEM .word
   165 = 108C			RNDSEED	= DATAORIGIN+$0005
   166
   167 = 101D 00 00		MEM
   167 				.endl							; UNIT SYSTEM
   168
   169 101F			.local	F_1						; FUNCTION
   170
   171 				; optimize OK (./test_temp/temp.pas), line = 7
   172
   173 101F A9 01			lda #$01
   174 1021 8D 97 10			sta RESULT
   175 1024			@exit
   176
   177 				; ------------------------------------------------------------
   178
   179 = 1093			A	= DATAORIGIN+$000C
   180 = 1095			B	= DATAORIGIN+$000E
   181 = 1097			RESULT	= DATAORIGIN+$0010
   182
   183 = 1093			@VarData	= A
   184 = 0004			@VarDataSize	= 4
   185
   186 1024 60				rts						; ret
   187 				.endl
   188 1025			l_0004
   189
   190 				; optimize OK (./test_temp/temp.pas), line = 11
   191
   192 1025 A9 05			lda #$05
   193 1027 8D 8E 10			sta X
   194 102A A9 00			lda #$00
   195 102C 8D 8F 10			sta X+1
   196
   197 				; optimize OK (./test_temp/temp.pas), line = 12
   198
   199 102F A9 01			lda #$01
   200 1031 8D 92 10			sta I
   201
   202 				; --- WhileProlog
   203 1034 4C 42 10			jmp l_0091
   204 1037			l_0092
   205
   206 				; optimize FAIL (0, ./test_temp/temp.pas), line = 13
   207
   208 1037 AD 8E 10			lda X
   209 103A D0 03			bne @+
   210 103C CE 8F 10			dec X+1
   211 				@
   212 103F CE 8E 10			dec X
   213 1042			l_0091
   214 1042 E8				inx
   215 1043 A0 01			ldy #1
   216 1045 AD 8F 10			lda X+1
   217 1048 30 05			bmi @+
   218 104A 0D 8E 10			ora X
   219 104D D0 01			sne
   220 				@
   221 104F 88				dey
   222 				@
   223 1050 94 14			sty :STACKORIGIN,x
   224 1052 AD 8E 10			lda X
   225 1055 38 E9 01			sub #$01
   226 1058 8D 93 10			sta F_1.A
   227 105B AD 8F 10			lda X+1
   228 105E E9 00			sbc #$00
   229 1060 8D 94 10			sta F_1.A+1
   230 1063 AD 90 10			lda Y
   231 1066 8D 95 10			sta F_1.B
   232 1069 AD 91 10			lda Y+1
   233 106C 8D 96 10			sta F_1.B+1
   234 106F 20 1F 10			jsr F_1
   235 1072 CA				dex
   236 1073 A0 01			ldy #1
   237 1075 AD 97 10			lda F_1.RESULT
   238 1078 CD 92 10			cmp I
   239 107B F0 01			beq @+
   240 107D 88				dey
   241 				@
   242 107E 98				tya
   243 107F 35 15			and :STACKORIGIN+1,x
   244 1081 D0 B4			jne l_0092
   245
   246 				; ------------------------------------------------------------
   247
   248 = 108E			X	= DATAORIGIN+$0007
   249 = 1090			Y	= DATAORIGIN+$0009
   250 = 1092			I	= DATAORIGIN+$000B
   251 1083			@exit
   252
   253 1083 A2 00		@halt	ldx #$00
   254 1085 9A				txs
   255
   256 1086 60				rts
   257
   258 				; ------------------------------------------------------------
   259
   260 1087			.local	@DEFINES
   261 1087			RAW
   262 1087			CPU_6502
   263 				.endl
   264
   265 1087			.local	@RESOURCE
   266 				.endl
   267
   268 				.endl							; MAIN
   269
   270 				; ------------------------------------------------------------
   271 				; ------------------------------------------------------------
   272
   273 				.macro	UNITINITIALIZATION
   274 				
   275 					.ifdef MAIN.SYSTEM.@UnitInit
   276 					jsr MAIN.SYSTEM.@UnitInit
   277 					.fi
   278 				.endm
   279
   280 				; ------------------------------------------------------------
   281
   282 					ift .SIZEOF(MAIN.SYSTEM) > 0
   283 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
   283 				SYSTEM: $101C..$101E
   284 					eif
   285
   286 				.nowarn	.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
   286 				CODE: $1003..$1086
   287
   288 				; ------------------------------------------------------------
   289
   290 = 1087				?adr = *
   291 					ift (?adr < ?old_adr) && (?old_adr - ?adr < $120)
   292 					?adr = ?old_adr
   293 					eif
   294
   295 					org ?adr
   296 = 1087				?old_adr = *
   297
   298 1087			DATAORIGIN
   299 1087 2D 28 00 18		.by  $2D $28 $00 $18
   300
   301 = 0004			VARINITSIZE	= *-DATAORIGIN
   302 = 0011			VARDATASIZE	= 17
   303
   304 = 1098			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
   305
   306 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
   306 				DATA: $1087..$1098
   307
   308 				; ------------------------------------------------------------
   309
   310 				.macro	STATICDATA
   311 				.endm
   312
   313 					end
