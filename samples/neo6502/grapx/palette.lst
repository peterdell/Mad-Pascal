mads 2.1.7 build 4 (2 Oct 23)
    54 				  opt l+
   102
   103 				.print 'ZPAGE: ',zpage,'..',zpend-1
   103 				ZPAGE: $0000..$0053
   104
   105 				.print 'RTBUF: ',@buf,'..',@buf+255
   105 				RTBUF: $0200..$02FF
   106
   107 				.print 'RTLIB: ',RTLIB,'..',*-1
   107 				RTLIB: $8003..$8283
   108
   109 				; ------------------------------------------------------------
   110
   111 8284			START
   112 8284 BA				tsx
   113 8285 8E BB 89			stx MAIN.@halt+1
   114
   115 = 0059			VLEN	= VARDATASIZE-VARINITSIZE
   116 = 89C4			VADR	= DATAORIGIN+VARINITSIZE
   117
   118 					ift VADR > $BFFF
   119 					ert 'Invalid memory address range ',VADR
   120 					eli (VLEN > 0) && (VLEN <= 256)
   121 8288 A2 A7			ldx #256-VLEN
   122 828A A9 00			lda #$00
   123 828C 9D 1D 89 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   124 					eli VLEN>256
   125 					m@init
   126 					eif
   127
   128 				.ifdef psptr
   129 					mwa #PROGRAMSTACK psptr
   130 				.fi
   131
   132 8292 A2 00			ldx #$00
   133 8294 86 00			stx bp						; BP = 0
   134
   135 8296 CA				dex						; X = 255
   136
   137 8297				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: palette.a65]
Source: palette.a65
   138
   139 8297			.local	MAIN						; PROCEDURE
   140
   141 8297 4C 91 87			jmp l_0004
   142
   143 				; ------------------------------------------------------------
   144
   145 829A			.local	SYSTEM						; UNIT
   146
   147 				; ------------------------------------------------------------
   148
   149 = 0648			M_PI_2	= $0648
   150 = 0192			D_PI_2	= $0192
   151 = 0004			D_PI_180	= $04
   152 = 0004			FMOPENREAD	= $04
   153 = 0008			FMOPENWRITE	= $08
   154 = 0009			FMOPENAPPEND	= $09
   155 = 000C			FMOPENREADWRITE	= $0C
   156 = 89BE			SCREENWIDTH	= DATAORIGIN+$0000
   157 = 89C0			SCREENHEIGHT	= DATAORIGIN+$0002
   158 = 89C2			DATESEPARATOR	= DATAORIGIN+$0004
   159 = 89C3			FILEMODE	= DATAORIGIN+$0005
   160 = 89C4			GRAPHMODE	= DATAORIGIN+$0006
   161 = 89C5			IORESULT	= DATAORIGIN+$0007
   162 = 89C6			EOLN	= DATAORIGIN+$0008
   163 = 89C7			RNDSEED	= DATAORIGIN+$0009
   164
   165 				.endl							; UNIT SYSTEM
   166
   167 				; ------------------------------------------------------------
   168
   169 829A			.local	NEO6502						; UNIT
   170
   171 829A			.local	NEOWAITMESSAGE					; PROCEDURE | ASSEMBLER
   172
   173 				; -------------------  ASM Block 00000059  -------------------
   174
   175 829A 20 7C 82		   @WaitMessage 
   176
   177 829D			@exit
   178 					.ifdef @new
   179 					lda <@VarData
   180 					sta :ztmp
   181 					lda >@VarData
   182 					ldy #@VarDataSize-1
   183 					jmp @FreeMem
   184 					els
   185 829D 60				rts						; ret
   186 					eif
   187 				.endl
   188
   189 829E			.local	NEOSENDMESSAGE					; FUNCTION
   190
   191 				; optimize FAIL ('NEOWAITMESSAGE', NEO6502), line = 442
   192
   193 829E 20 9A 82			jsr NEOWAITMESSAGE
   194
   195 				; optimize OK (NEO6502), line = 443
   196
   197 82A1 AD CA 89			lda FUNC
   198 82A4 8D 01 FF			sta NEOMESSAGE.FUNC
   199
   200 				; optimize OK (NEO6502), line = 444
   201
   202 82A7 AD C9 89			lda GROUP
   203 82AA 8D 00 FF			sta NEOMESSAGE.GROUP
   204
   205 				; --- RepeatUntilProlog
   206 82AD			l_0093
   207
   208 				; optimize OK (NEO6502), line = 445
   209
   210 82AD AD 00 FF			lda NEOMESSAGE.GROUP
   211 82B0 D0 FB			jne l_0093
   212
   213 				; optimize OK (NEO6502), line = 446
   214
   215 82B2 AD 04 FF			lda adr.NEOMESSAGE.PARAMS
   216 82B5 8D CB 89			sta RESULT
   217 82B8			@exit
   218
   219 				; ------------------------------------------------------------
   220
   221 = 89C9			GROUP	= DATAORIGIN+$000B
   222 = 89CA			FUNC	= DATAORIGIN+$000C
   223 = 89CB			RESULT	= DATAORIGIN+$000D
   224
   225 = 89C9			@VarData	= GROUP
   226 = 0002			@VarDataSize	= 2
   227
   228 82B8 60				rts						; ret
   229 				.endl
   230
   231 82B9			.local	NEOSETCOLOR					; PROCEDURE
   232
   233 				; optimize OK (NEO6502), line = 563
   234
   235 82B9 AD CC 89			lda ACOL
   236 82BC 8D 04 FF			sta adr.NEOMESSAGE.PARAMS
   237
   238 				; optimize OK (NEO6502), line = 564
   239
   240 82BF AD CD 89			lda XCOL
   241 82C2 8D 05 FF			sta adr.NEOMESSAGE.PARAMS+$01
   242
   243 				; optimize OK (NEO6502), line = 565
   244
   245 82C5 AD CE 89			lda SOLID
   246 82C8 8D 06 FF			sta adr.NEOMESSAGE.PARAMS+$02
   247
   248 				; optimize OK (NEO6502), line = 566
   249
   250 82CB AD CF 89			lda SIZE
   251 82CE 8D 07 FF			sta adr.NEOMESSAGE.PARAMS+$03
   252
   253 				; optimize OK (NEO6502), line = 567
   254
   255 82D1 AD D0 89			lda FLIP
   256 82D4 8D 08 FF			sta adr.NEOMESSAGE.PARAMS+$04
   257
   258 				; optimize OK (NEO6502), line = 568
   259
   260 82D7 A9 05			lda #$05
   261 82D9 8D C9 89			sta NEOSENDMESSAGE.GROUP
   262 82DC A9 01			lda #$01
   263 82DE 8D CA 89			sta NEOSENDMESSAGE.FUNC
   264 82E1 20 9E 82			jsr NEOSENDMESSAGE
   265
   266 				; ------------------------------------------------------------
   267
   268 = 89CC			ACOL	= DATAORIGIN+$000E
   269 = 89CD			XCOL	= DATAORIGIN+$000F
   270 = 89CE			SOLID	= DATAORIGIN+$0010
   271 = 89CF			SIZE	= DATAORIGIN+$0011
   272 = 89D0			FLIP	= DATAORIGIN+$0012
   273
   274 = 89CC			@VarData	= ACOL
   275 = 0005			@VarDataSize	= 5
   276
   277 82E4			@exit
   278 					.ifdef @new
   279 					lda <@VarData
   280 					sta :ztmp
   281 					lda >@VarData
   282 					ldy #@VarDataSize-1
   283 					jmp @FreeMem
   284 					els
   285 82E4 60				rts						; ret
   286 					eif
   287 				.endl
   288
   289 82E5			.local	NEODRAWRECT					; PROCEDURE
   290
   291 				; optimize OK (NEO6502), line = 582
   292
   293 82E5 AD D1 89			lda X0
   294 82E8 8D 04 FF			sta adr.WORDPARAMS
   295 82EB AD D2 89			lda X0+1
   296 82EE 8D 05 FF			sta adr.WORDPARAMS+1
   297
   298 				; optimize OK (NEO6502), line = 583
   299
   300 82F1 AD D3 89			lda Y0
   301 82F4 8D 06 FF			sta adr.WORDPARAMS+$02
   302 82F7 AD D4 89			lda Y0+1
   303 82FA 8D 07 FF			sta adr.WORDPARAMS+1+$02
   304
   305 				; optimize OK (NEO6502), line = 584
   306
   307 82FD AD D5 89			lda X1
   308 8300 8D 08 FF			sta adr.WORDPARAMS+$04
   309 8303 AD D6 89			lda X1+1
   310 8306 8D 09 FF			sta adr.WORDPARAMS+1+$04
   311
   312 				; optimize OK (NEO6502), line = 585
   313
   314 8309 AD D7 89			lda Y1
   315 830C 8D 0A FF			sta adr.WORDPARAMS+$06
   316 830F AD D8 89			lda Y1+1
   317 8312 8D 0B FF			sta adr.WORDPARAMS+1+$06
   318
   319 				; optimize OK (NEO6502), line = 586
   320
   321 8315 A9 05			lda #$05
   322 8317 8D C9 89			sta NEOSENDMESSAGE.GROUP
   323 831A A9 03			lda #$03
   324 831C 8D CA 89			sta NEOSENDMESSAGE.FUNC
   325 831F 20 9E 82			jsr NEOSENDMESSAGE
   326
   327 				; ------------------------------------------------------------
   328
   329 = 89D1			X0	= DATAORIGIN+$0013
   330 = 89D3			Y0	= DATAORIGIN+$0015
   331 = 89D5			X1	= DATAORIGIN+$0017
   332 = 89D7			Y1	= DATAORIGIN+$0019
   333
   334 = 89D1			@VarData	= X0
   335 = 0008			@VarDataSize	= 8
   336
   337 8322			@exit
   338 					.ifdef @new
   339 					lda <@VarData
   340 					sta :ztmp
   341 					lda >@VarData
   342 					ldy #@VarDataSize-1
   343 					jmp @FreeMem
   344 					els
   345 8322 60				rts						; ret
   346 					eif
   347 				.endl
   348
   349 8323			.local	NEOSETPALETTE					; PROCEDURE
   350
   351 				; optimize OK (NEO6502), line = 632
   352
   353 8323 AD D9 89			lda COL
   354 8326 8D 04 FF			sta adr.NEOMESSAGE.PARAMS
   355
   356 				; optimize OK (NEO6502), line = 633
   357
   358 8329 AD DA 89			lda R
   359 832C 8D 05 FF			sta adr.NEOMESSAGE.PARAMS+$01
   360
   361 				; optimize OK (NEO6502), line = 634
   362
   363 832F AD DB 89			lda G
   364 8332 8D 06 FF			sta adr.NEOMESSAGE.PARAMS+$02
   365
   366 				; optimize OK (NEO6502), line = 635
   367
   368 8335 AD DC 89			lda B
   369 8338 8D 07 FF			sta adr.NEOMESSAGE.PARAMS+$03
   370
   371 				; optimize OK (NEO6502), line = 636
   372
   373 833B A9 05			lda #$05
   374 833D 8D C9 89			sta NEOSENDMESSAGE.GROUP
   375 8340 A9 20			lda #$20
   376 8342 8D CA 89			sta NEOSENDMESSAGE.FUNC
   377 8345 20 9E 82			jsr NEOSENDMESSAGE
   378
   379 				; ------------------------------------------------------------
   380
   381 = 89D9			COL	= DATAORIGIN+$001B
   382 = 89DA			R	= DATAORIGIN+$001C
   383 = 89DB			G	= DATAORIGIN+$001D
   384 = 89DC			B	= DATAORIGIN+$001E
   385
   386 = 89D9			@VarData	= COL
   387 = 0004			@VarDataSize	= 4
   388
   389 8348			@exit
   390 					.ifdef @new
   391 					lda <@VarData
   392 					sta :ztmp
   393 					lda >@VarData
   394 					ldy #@VarDataSize-1
   395 					jmp @FreeMem
   396 					els
   397 8348 60				rts						; ret
   398 					eif
   399 				.endl
   400
   401 				; ------------------------------------------------------------
   402
   403 = FF00			N6502MSG_ADDRESS	= $FF00
   404 = FFFF			NEO_GFX_RAM	= $FFFF
   405 = FF00			adr.NEOMESSAGE	= $FF00
   406 8349			.var NEOMESSAGE	= adr.NEOMESSAGE .word
   407 = FF00			NEOMESSAGE.GROUP	= $FF00
   408 = FF01			NEOMESSAGE.FUNC	= $FF01
   409 = FF02			NEOMESSAGE.ERROR	= $FF02
   410 = FF03			NEOMESSAGE.STATUS	= $FF03
   411 = FF04			adr.NEOMESSAGE.PARAMS	= $FF04
   412 8349			.var NEOMESSAGE.PARAMS	= adr.NEOMESSAGE.PARAMS .word
   413 = FF04			adr.WORDPARAMS	= $FF04
   414 8349			.var WORDPARAMS	= adr.WORDPARAMS .word
   415 = FF04			adr.DWORDPARAMS	= $FF04
   416 8349			.var DWORDPARAMS	= adr.DWORDPARAMS .word
   417 = FF05			adr.WORDXPARAMS	= $FF05
   418 8349			.var WORDXPARAMS	= adr.WORDXPARAMS .word
   419 = FF04			adr.SOUNDPARAMS	= $FF04
   420 8349			.var SOUNDPARAMS	= adr.SOUNDPARAMS .word
   421 = FF04			SOUNDPARAMS.CHANNEL	= $FF04
   422 = FF05			SOUNDPARAMS.FREQ	= $FF05
   423 = FF07			SOUNDPARAMS.LEN	= $FF07
   424 = FF09			SOUNDPARAMS.SLIDE	= $FF09
   425 = FF0B			SOUNDPARAMS.STYPE	= $FF0B
   426
   427 = 8349 00 FF		NEOMESSAGE
   427 = 834B 04 FF		NEOMESSAGE.PARAMS
   427 = 834D 04 FF		WORDPARAMS
   427 = 834F 04 FF		DWORDPARAMS
   427 = 8351 05 FF		WORDXPARAMS
   427 = 8353 04 FF		SOUNDPARAMS
   427 				.endl							; UNIT NEO6502
   428
   429 				; ------------------------------------------------------------
   430
   431 8355			.local	CRT						; UNIT
   432
   433 8355			.local	KEYPRESSED					; FUNCTION | ASSEMBLER
   434
   435 				; -------------------  ASM Block 00000065  -------------------
   436
   437 8355 20 4C 82			@SendMessage
   438 8358 02 02			dta 2,2
   439 835A 20 7C 82			@WaitMessage
   440 835D AD 04 FF			lda DParameters
   441 8360 8D DD 89			sta result
   442
   443 8363			@exit
   444
   445 				; ------------------------------------------------------------
   446
   447 = 89DD			RESULT	= DATAORIGIN+$001F
   448 8363 60				rts						; ret
   449 				.endl
   450
   451 				; ------------------------------------------------------------
   452
   453 = 0000			BW40	= $00
   454 = 0001			CO40	= $01
   455 = 0002			BW80	= $02
   456 = 0003			CO80	= $03
   457 = 0007			MONO	= $07
   458 = 0001			C40	= $01
   459 = 0003			C80	= $03
   460 = 0080			BLINK	= $80
   461
   462 				.endl							; UNIT CRT
   463
   464 8364			.local	HSVTORGB					; PROCEDURE
   465
   466 				; optimize OK (palette.pas), line = 18
   467
   468 8364 AD F6 89			lda H+3
   469 8367 D0 11			bne @+
   470 8369 AD F5 89			lda H+2
   471 836C C9 01			cmp #$01
   472 836E D0 0A			bne @+
   473 8370 AD F4 89			lda H+1
   474 8373 C9 68			cmp #$68
   475 8375 D0 03			bne @+
   476 8377 AD F3 89			lda H
   477 				@
   478 837A D0 0E			jne l_0128
   479
   480 				; optimize OK (palette.pas), line = 19
   481
   482 837C A9 00			lda #$00
   483 837E 8D F3 89			sta H
   484 8381 8D F4 89			sta H+1
   485 8384 8D F5 89			sta H+2
   486 8387 8D F6 89			sta H+3
   487 838A			l_0128
   488
   489 				; optimize OK (palette.pas), line = 20
   490
   491 838A A9 00			lda #$00
   492 838C 85 0C			sta @REAL_DIV.B
   493 838E A9 3C			lda #$3C
   494 8390 85 0D			sta @REAL_DIV.B+1
   495 8392 A9 00			lda #$00
   496 8394 85 0E			sta @REAL_DIV.B+2
   497 8396 85 0F			sta @REAL_DIV.B+3
   498 8398 AD F3 89			lda H
   499 839B 85 04			sta @REAL_DIV.A
   500 839D AD F4 89			lda H+1
   501 83A0 85 05			sta @REAL_DIV.A+1
   502 83A2 AD F5 89			lda H+2
   503 83A5 85 06			sta @REAL_DIV.A+2
   504 83A7 AD F6 89			lda H+3
   505 83AA 85 07			sta @REAL_DIV.A+3
   506 83AC 20 50 81			jsr @REAL_DIV
   507 83AF A5 04			lda :eax
   508 83B1 8D F3 89			sta H
   509 83B4 A5 05			lda :eax+1
   510 83B6 8D F4 89			sta H+1
   511 83B9 A5 06			lda :eax+2
   512 83BB 8D F5 89			sta H+2
   513 83BE A5 07			lda :eax+3
   514 83C0 8D F6 89			sta H+3
   515
   516 				; optimize OK (palette.pas), line = 21
   517
   518 83C3 AD F3 89			lda H
   519 83C6 85 04			sta @REAL_TRUNC.A
   520 83C8 AD F4 89			lda H+1
   521 83CB 85 05			sta @REAL_TRUNC.A+1
   522 83CD AD F5 89			lda H+2
   523 83D0 85 06			sta @REAL_TRUNC.A+2
   524 83D2 AD F6 89			lda H+3
   525 83D5 85 07			sta @REAL_TRUNC.A+3
   526 83D7 20 DA 81			jsr @REAL_TRUNC
   527 83DA A5 04			lda :eax
   528 83DC 8D 1B 8A			sta I
   529
   530 				; optimize OK (palette.pas), line = 22
   531
   532 83DF AD F3 89			lda H
   533 83E2 8D 17 8A			sta F
   534 83E5 AD F4 89			lda H+1
   535 83E8 38 ED 1B 8A			sub I
   536 83EC 8D 18 8A			sta F+1
   537 83EF AD F5 89			lda H+2
   538 83F2 E9 00			sbc #$00
   539 83F4 8D 19 8A			sta F+2
   540 83F7 AD F6 89			lda H+3
   541 83FA E9 00			sbc #$00
   542 83FC 8D 1A 8A			sta F+3
   543
   544 				; optimize OK (palette.pas), line = 23
   545
   546 83FF A9 00			lda #$00
   547 8401 38 ED F7 89			sub S
   548 8405 85 0C			sta @REAL_MUL.B
   549 8407 A9 01			lda #$01
   550 8409 ED F8 89			sbc S+1
   551 840C 85 0D			sta @REAL_MUL.B+1
   552 840E A9 00			lda #$00
   553 8410 ED F9 89			sbc S+2
   554 8413 85 0E			sta @REAL_MUL.B+2
   555 8415 A9 00			lda #$00
   556 8417 ED FA 89			sbc S+3
   557 841A 85 0F			sta @REAL_MUL.B+3
   558 841C AD FB 89			lda V
   559 841F 85 04			sta @REAL_MUL.A
   560 8421 AD FC 89			lda V+1
   561 8424 85 05			sta @REAL_MUL.A+1
   562 8426 AD FD 89			lda V+2
   563 8429 85 06			sta @REAL_MUL.A+2
   564 842B AD FE 89			lda V+3
   565 842E 85 07			sta @REAL_MUL.A+3
   566 8430 20 5B 80			jsr @REAL_MUL
   567 8433 A5 04			lda :eax
   568 8435 8D 0B 8A			sta P1
   569 8438 A5 05			lda :eax+1
   570 843A 8D 0C 8A			sta P1+1
   571 843D A5 06			lda :eax+2
   572 843F 8D 0D 8A			sta P1+2
   573 8442 A5 07			lda :eax+3
   574 8444 8D 0E 8A			sta P1+3
   575
   576 				; optimize OK (palette.pas), line = 24
   577
   578 8447 AD 17 8A			lda F
   579 844A 85 0C			sta @REAL_MUL.B
   580 844C AD 18 8A			lda F+1
   581 844F 85 0D			sta @REAL_MUL.B+1
   582 8451 AD 19 8A			lda F+2
   583 8454 85 0E			sta @REAL_MUL.B+2
   584 8456 AD 1A 8A			lda F+3
   585 8459 85 0F			sta @REAL_MUL.B+3
   586 845B AD F7 89			lda S
   587 845E 85 04			sta @REAL_MUL.A
   588 8460 AD F8 89			lda S+1
   589 8463 85 05			sta @REAL_MUL.A+1
   590 8465 AD F9 89			lda S+2
   591 8468 85 06			sta @REAL_MUL.A+2
   592 846A AD FA 89			lda S+3
   593 846D 85 07			sta @REAL_MUL.A+3
   594 846F 20 5B 80			jsr @REAL_MUL
   595 8472 A9 00			lda #$00
   596 8474 38 E5 04			sub :eax
   597 8477 85 0C			sta @REAL_MUL.B
   598 8479 A9 01			lda #$01
   599 847B E5 05			sbc :eax+1
   600 847D 85 0D			sta @REAL_MUL.B+1
   601 847F A9 00			lda #$00
   602 8481 E5 06			sbc :eax+2
   603 8483 85 0E			sta @REAL_MUL.B+2
   604 8485 A9 00			lda #$00
   605 8487 E5 07			sbc :eax+3
   606 8489 85 0F			sta @REAL_MUL.B+3
   607 848B AD FB 89			lda V
   608 848E 85 04			sta @REAL_MUL.A
   609 8490 AD FC 89			lda V+1
   610 8493 85 05			sta @REAL_MUL.A+1
   611 8495 AD FD 89			lda V+2
   612 8498 85 06			sta @REAL_MUL.A+2
   613 849A AD FE 89			lda V+3
   614 849D 85 07			sta @REAL_MUL.A+3
   615 849F 20 5B 80			jsr @REAL_MUL
   616 84A2 A5 04			lda :eax
   617 84A4 8D 0F 8A			sta P2
   618 84A7 A5 05			lda :eax+1
   619 84A9 8D 10 8A			sta P2+1
   620 84AC A5 06			lda :eax+2
   621 84AE 8D 11 8A			sta P2+2
   622 84B1 A5 07			lda :eax+3
   623 84B3 8D 12 8A			sta P2+3
   624
   625 				; optimize OK (palette.pas), line = 25
   626
   627 84B6 A9 00			lda #$00
   628 84B8 38 ED 17 8A			sub F
   629 84BC 85 0C			sta @REAL_MUL.B
   630 84BE A9 01			lda #$01
   631 84C0 ED 18 8A			sbc F+1
   632 84C3 85 0D			sta @REAL_MUL.B+1
   633 84C5 A9 00			lda #$00
   634 84C7 ED 19 8A			sbc F+2
   635 84CA 85 0E			sta @REAL_MUL.B+2
   636 84CC A9 00			lda #$00
   637 84CE ED 1A 8A			sbc F+3
   638 84D1 85 0F			sta @REAL_MUL.B+3
   639 84D3 AD F7 89			lda S
   640 84D6 85 04			sta @REAL_MUL.A
   641 84D8 AD F8 89			lda S+1
   642 84DB 85 05			sta @REAL_MUL.A+1
   643 84DD AD F9 89			lda S+2
   644 84E0 85 06			sta @REAL_MUL.A+2
   645 84E2 AD FA 89			lda S+3
   646 84E5 85 07			sta @REAL_MUL.A+3
   647 84E7 20 5B 80			jsr @REAL_MUL
   648 84EA A9 00			lda #$00
   649 84EC 38 E5 04			sub :eax
   650 84EF 85 0C			sta @REAL_MUL.B
   651 84F1 A9 01			lda #$01
   652 84F3 E5 05			sbc :eax+1
   653 84F5 85 0D			sta @REAL_MUL.B+1
   654 84F7 A9 00			lda #$00
   655 84F9 E5 06			sbc :eax+2
   656 84FB 85 0E			sta @REAL_MUL.B+2
   657 84FD A9 00			lda #$00
   658 84FF E5 07			sbc :eax+3
   659 8501 85 0F			sta @REAL_MUL.B+3
   660 8503 AD FB 89			lda V
   661 8506 85 04			sta @REAL_MUL.A
   662 8508 AD FC 89			lda V+1
   663 850B 85 05			sta @REAL_MUL.A+1
   664 850D AD FD 89			lda V+2
   665 8510 85 06			sta @REAL_MUL.A+2
   666 8512 AD FE 89			lda V+3
   667 8515 85 07			sta @REAL_MUL.A+3
   668 8517 20 5B 80			jsr @REAL_MUL
   669 851A A5 04			lda :eax
   670 851C 8D 13 8A			sta P3
   671 851F A5 05			lda :eax+1
   672 8521 8D 14 8A			sta P3+1
   673 8524 A5 06			lda :eax+2
   674 8526 8D 15 8A			sta P3+2
   675 8529 A5 07			lda :eax+3
   676 852B 8D 16 8A			sta P3+3
   677
   678 				; optimize OK (palette.pas), line = 26
   679
   680 852E AD 1B 8A			lda I
   681 8531 8D 1C 8A			sta @CASETMP_0004
   682 8534 D0 4B			jne l_0180
   683 				@
   684
   685 				; optimize OK (palette.pas), line = 29
   686
   687 8536 AD FB 89			lda V
   688 8539 8D FF 89			sta R
   689 853C AD FC 89			lda V+1
   690 853F 8D 00 8A			sta R+1
   691 8542 AD FD 89			lda V+2
   692 8545 8D 01 8A			sta R+2
   693 8548 AD FE 89			lda V+3
   694 854B 8D 02 8A			sta R+3
   695
   696 				; optimize OK (palette.pas), line = 30
   697
   698 854E AD 13 8A			lda P3
   699 8551 8D 03 8A			sta G
   700 8554 AD 14 8A			lda P3+1
   701 8557 8D 04 8A			sta G+1
   702 855A AD 15 8A			lda P3+2
   703 855D 8D 05 8A			sta G+2
   704 8560 AD 16 8A			lda P3+3
   705 8563 8D 06 8A			sta G+3
   706
   707 				; optimize OK (palette.pas), line = 31
   708
   709 8566 AD 0B 8A			lda P1
   710 8569 8D 07 8A			sta B
   711 856C AD 0C 8A			lda P1+1
   712 856F 8D 08 8A			sta B+1
   713 8572 AD 0D 8A			lda P1+2
   714 8575 8D 09 8A			sta B+2
   715 8578 AD 0E 8A			lda P1+3
   716 857B 8D 0A 8A			sta B+3
   717 857E 4C 09 87			jmp a_0004
   718 8581			l_0180
   719 8581 C9 01			cmp #$01
   720 8583 D0 4B			jne l_0193
   721
   722 				; optimize OK (palette.pas), line = 35
   723
   724 8585 AD 0F 8A			lda P2
   725 8588 8D FF 89			sta R
   726 858B AD 10 8A			lda P2+1
   727 858E 8D 00 8A			sta R+1
   728 8591 AD 11 8A			lda P2+2
   729 8594 8D 01 8A			sta R+2
   730 8597 AD 12 8A			lda P2+3
   731 859A 8D 02 8A			sta R+3
   732
   733 				; optimize OK (palette.pas), line = 36
   734
   735 859D AD FB 89			lda V
   736 85A0 8D 03 8A			sta G
   737 85A3 AD FC 89			lda V+1
   738 85A6 8D 04 8A			sta G+1
   739 85A9 AD FD 89			lda V+2
   740 85AC 8D 05 8A			sta G+2
   741 85AF AD FE 89			lda V+3
   742 85B2 8D 06 8A			sta G+3
   743
   744 				; optimize OK (palette.pas), line = 37
   745
   746 85B5 AD 0B 8A			lda P1
   747 85B8 8D 07 8A			sta B
   748 85BB AD 0C 8A			lda P1+1
   749 85BE 8D 08 8A			sta B+1
   750 85C1 AD 0D 8A			lda P1+2
   751 85C4 8D 09 8A			sta B+2
   752 85C7 AD 0E 8A			lda P1+3
   753 85CA 8D 0A 8A			sta B+3
   754 85CD 4C 09 87			jmp a_0004
   755 85D0			l_0193
   756 85D0 C9 02			cmp #$02
   757 85D2 D0 4B			jne l_01A6
   758
   759 				; optimize OK (palette.pas), line = 41
   760
   761 85D4 AD 0B 8A			lda P1
   762 85D7 8D FF 89			sta R
   763 85DA AD 0C 8A			lda P1+1
   764 85DD 8D 00 8A			sta R+1
   765 85E0 AD 0D 8A			lda P1+2
   766 85E3 8D 01 8A			sta R+2
   767 85E6 AD 0E 8A			lda P1+3
   768 85E9 8D 02 8A			sta R+3
   769
   770 				; optimize OK (palette.pas), line = 42
   771
   772 85EC AD FB 89			lda V
   773 85EF 8D 03 8A			sta G
   774 85F2 AD FC 89			lda V+1
   775 85F5 8D 04 8A			sta G+1
   776 85F8 AD FD 89			lda V+2
   777 85FB 8D 05 8A			sta G+2
   778 85FE AD FE 89			lda V+3
   779 8601 8D 06 8A			sta G+3
   780
   781 				; optimize OK (palette.pas), line = 43
   782
   783 8604 AD 13 8A			lda P3
   784 8607 8D 07 8A			sta B
   785 860A AD 14 8A			lda P3+1
   786 860D 8D 08 8A			sta B+1
   787 8610 AD 15 8A			lda P3+2
   788 8613 8D 09 8A			sta B+2
   789 8616 AD 16 8A			lda P3+3
   790 8619 8D 0A 8A			sta B+3
   791 861C 4C 09 87			jmp a_0004
   792 861F			l_01A6
   793 861F C9 03			cmp #$03
   794 8621 D0 4B			jne l_01B9
   795
   796 				; optimize OK (palette.pas), line = 47
   797
   798 8623 AD 0B 8A			lda P1
   799 8626 8D FF 89			sta R
   800 8629 AD 0C 8A			lda P1+1
   801 862C 8D 00 8A			sta R+1
   802 862F AD 0D 8A			lda P1+2
   803 8632 8D 01 8A			sta R+2
   804 8635 AD 0E 8A			lda P1+3
   805 8638 8D 02 8A			sta R+3
   806
   807 				; optimize OK (palette.pas), line = 48
   808
   809 863B AD 0F 8A			lda P2
   810 863E 8D 03 8A			sta G
   811 8641 AD 10 8A			lda P2+1
   812 8644 8D 04 8A			sta G+1
   813 8647 AD 11 8A			lda P2+2
   814 864A 8D 05 8A			sta G+2
   815 864D AD 12 8A			lda P2+3
   816 8650 8D 06 8A			sta G+3
   817
   818 				; optimize OK (palette.pas), line = 49
   819
   820 8653 AD FB 89			lda V
   821 8656 8D 07 8A			sta B
   822 8659 AD FC 89			lda V+1
   823 865C 8D 08 8A			sta B+1
   824 865F AD FD 89			lda V+2
   825 8662 8D 09 8A			sta B+2
   826 8665 AD FE 89			lda V+3
   827 8668 8D 0A 8A			sta B+3
   828 866B 4C 09 87			jmp a_0004
   829 866E			l_01B9
   830 866E C9 04			cmp #$04
   831 8670 D0 4B			jne l_01CC
   832
   833 				; optimize OK (palette.pas), line = 53
   834
   835 8672 AD 13 8A			lda P3
   836 8675 8D FF 89			sta R
   837 8678 AD 14 8A			lda P3+1
   838 867B 8D 00 8A			sta R+1
   839 867E AD 15 8A			lda P3+2
   840 8681 8D 01 8A			sta R+2
   841 8684 AD 16 8A			lda P3+3
   842 8687 8D 02 8A			sta R+3
   843
   844 				; optimize OK (palette.pas), line = 54
   845
   846 868A AD 0B 8A			lda P1
   847 868D 8D 03 8A			sta G
   848 8690 AD 0C 8A			lda P1+1
   849 8693 8D 04 8A			sta G+1
   850 8696 AD 0D 8A			lda P1+2
   851 8699 8D 05 8A			sta G+2
   852 869C AD 0E 8A			lda P1+3
   853 869F 8D 06 8A			sta G+3
   854
   855 				; optimize OK (palette.pas), line = 55
   856
   857 86A2 AD FB 89			lda V
   858 86A5 8D 07 8A			sta B
   859 86A8 AD FC 89			lda V+1
   860 86AB 8D 08 8A			sta B+1
   861 86AE AD FD 89			lda V+2
   862 86B1 8D 09 8A			sta B+2
   863 86B4 AD FE 89			lda V+3
   864 86B7 8D 0A 8A			sta B+3
   865 86BA 4C 09 87			jmp a_0004
   866 86BD			l_01CC
   867 86BD C9 05			cmp #$05
   868 86BF D0 48			jne l_01DF
   869
   870 				; optimize OK (palette.pas), line = 59
   871
   872 86C1 AD FB 89			lda V
   873 86C4 8D FF 89			sta R
   874 86C7 AD FC 89			lda V+1
   875 86CA 8D 00 8A			sta R+1
   876 86CD AD FD 89			lda V+2
   877 86D0 8D 01 8A			sta R+2
   878 86D3 AD FE 89			lda V+3
   879 86D6 8D 02 8A			sta R+3
   880
   881 				; optimize OK (palette.pas), line = 60
   882
   883 86D9 AD 0B 8A			lda P1
   884 86DC 8D 03 8A			sta G
   885 86DF AD 0C 8A			lda P1+1
   886 86E2 8D 04 8A			sta G+1
   887 86E5 AD 0D 8A			lda P1+2
   888 86E8 8D 05 8A			sta G+2
   889 86EB AD 0E 8A			lda P1+3
   890 86EE 8D 06 8A			sta G+3
   891
   892 				; optimize OK (palette.pas), line = 61
   893
   894 86F1 AD 0F 8A			lda P2
   895 86F4 8D 07 8A			sta B
   896 86F7 AD 10 8A			lda P2+1
   897 86FA 8D 08 8A			sta B+1
   898 86FD AD 11 8A			lda P2+2
   899 8700 8D 09 8A			sta B+2
   900 8703 AD 12 8A			lda P2+3
   901 8706 8D 0A 8A			sta B+3
   902 8709			l_01DF
   903 8709			a_0004
   904
   905 				; optimize OK (palette.pas), line = 67
   906
   907 8709 A9 00			lda #$00
   908 870B 85 0C			sta @REAL_MUL.B
   909 870D 85 0D			sta @REAL_MUL.B+1
   910 870F A9 01			lda #$01
   911 8711 85 0E			sta @REAL_MUL.B+2
   912 8713 A9 00			lda #$00
   913 8715 85 0F			sta @REAL_MUL.B+3
   914 8717 AD FF 89			lda R
   915 871A 85 04			sta @REAL_MUL.A
   916 871C AD 00 8A			lda R+1
   917 871F 85 05			sta @REAL_MUL.A+1
   918 8721 AD 01 8A			lda R+2
   919 8724 85 06			sta @REAL_MUL.A+2
   920 8726 AD 02 8A			lda R+3
   921 8729 85 07			sta @REAL_MUL.A+3
   922 872B 20 5B 80			jsr @REAL_MUL
   923 872E 20 0E 82			jsr @REAL_ROUND
   924 8731 A5 04			lda :eax
   925 8733 8D E2 89			sta RB
   926
   927 				; optimize OK (palette.pas), line = 68
   928
   929 8736 A9 00			lda #$00
   930 8738 85 0C			sta @REAL_MUL.B
   931 873A 85 0D			sta @REAL_MUL.B+1
   932 873C A9 01			lda #$01
   933 873E 85 0E			sta @REAL_MUL.B+2
   934 8740 A9 00			lda #$00
   935 8742 85 0F			sta @REAL_MUL.B+3
   936 8744 AD 03 8A			lda G
   937 8747 85 04			sta @REAL_MUL.A
   938 8749 AD 04 8A			lda G+1
   939 874C 85 05			sta @REAL_MUL.A+1
   940 874E AD 05 8A			lda G+2
   941 8751 85 06			sta @REAL_MUL.A+2
   942 8753 AD 06 8A			lda G+3
   943 8756 85 07			sta @REAL_MUL.A+3
   944 8758 20 5B 80			jsr @REAL_MUL
   945 875B 20 0E 82			jsr @REAL_ROUND
   946 875E A5 04			lda :eax
   947 8760 8D E3 89			sta GB
   948
   949 				; optimize OK (palette.pas), line = 69
   950
   951 8763 A9 00			lda #$00
   952 8765 85 0C			sta @REAL_MUL.B
   953 8767 85 0D			sta @REAL_MUL.B+1
   954 8769 A9 01			lda #$01
   955 876B 85 0E			sta @REAL_MUL.B+2
   956 876D A9 00			lda #$00
   957 876F 85 0F			sta @REAL_MUL.B+3
   958 8771 AD 07 8A			lda B
   959 8774 85 04			sta @REAL_MUL.A
   960 8776 AD 08 8A			lda B+1
   961 8779 85 05			sta @REAL_MUL.A+1
   962 877B AD 09 8A			lda B+2
   963 877E 85 06			sta @REAL_MUL.A+2
   964 8780 AD 0A 8A			lda B+3
   965 8783 85 07			sta @REAL_MUL.A+3
   966 8785 20 5B 80			jsr @REAL_MUL
   967 8788 20 0E 82			jsr @REAL_ROUND
   968 878B A5 04			lda :eax
   969 878D 8D E4 89			sta BB
   970
   971 				; ------------------------------------------------------------
   972
   973 = 89F3			H	= DATAORIGIN+$0035
   974 = 89F7			S	= DATAORIGIN+$0039
   975 = 89FB			V	= DATAORIGIN+$003D
   976 = 89FF			R	= DATAORIGIN+$0041
   977 = 8A03			G	= DATAORIGIN+$0045
   978 = 8A07			B	= DATAORIGIN+$0049
   979 = 8A0B			P1	= DATAORIGIN+$004D
   980 = 8A0F			P2	= DATAORIGIN+$0051
   981 = 8A13			P3	= DATAORIGIN+$0055
   982 = 8A17			F	= DATAORIGIN+$0059
   983 = 8A1B			I	= DATAORIGIN+$005D
   984 = 8A1C			@CASETMP_0004	= DATAORIGIN+$005E
   985
   986 = 89F3			@VarData	= H
   987 = 002A			@VarDataSize	= 42
   988
   989 8790			@exit
   990 					.ifdef @new
   991 					lda <@VarData
   992 					sta :ztmp
   993 					lda >@VarData
   994 					ldy #@VarDataSize-1
   995 					jmp @FreeMem
   996 					els
   997 8790 60				rts						; ret
   998 					eif
   999 				.endl
  1000 8791			l_0004
  1001
  1002 				; optimize OK (palette.pas), line = 73
  1003
  1004 8791 A9 00			lda #$00
  1005 8793 8D E1 89			sta C
  1006
  1007 				; optimize OK (palette.pas), line = 74
  1008
  1009 8796 8D DF 89			sta I
  1010
  1011 8799			l_0219
  1012 				; --- ForToDoCondition
  1013 8799 AD DF 89			lda I
  1014 879C C9 10			cmp #$10
  1015 879E 90 03 4C B2 89		jcs l_0227
  1016
  1017 				; optimize OK (palette.pas), line = 75
  1018
  1019 87A3 A9 00			lda #$00
  1020 87A5 8D E0 89			sta J
  1021
  1022 87A8			l_0230
  1023 				; --- ForToDoCondition
  1024 87A8 AD E0 89			lda J
  1025 87AB C9 10			cmp #$10
  1026 87AD 90 03 4C AA 89		jcs l_023E
  1027
  1028 				; optimize OK (palette.pas), line = 76
  1029
  1030 87B2 85 0C			sta :ecx
  1031 87B4 A9 14			lda #$14
  1032 87B6 85 04			sta :eax
  1033 					.ifdef fmulinit
  1034 					fmulu_8
  1035 					els
  1036 87B8 20 03 80			imulCL
  1037 					eif
  1038 87BB 8D E6 89			sta X+1
  1039 87BE A5 04			lda :eax
  1040 87C0 8D E5 89			sta X
  1041
  1042 				; optimize OK (palette.pas), line = 77
  1043
  1044 87C3 AD DF 89			lda I
  1045 87C6 85 0C			sta :ecx
  1046 87C8 A9 0F			lda #$0F
  1047 87CA 85 04			sta :eax
  1048 					.ifdef fmulinit
  1049 					fmulu_8
  1050 					els
  1051 87CC 20 03 80			imulCL
  1052 					eif
  1053 87CF A5 04			lda :eax
  1054 87D1 8D DE 89			sta Y
  1055
  1056 				; optimize OK (palette.pas), line = 78
  1057
  1058 87D4 A9 00			lda #$00
  1059 87D6 8D CC 89			sta NEO6502.NEOSETCOLOR.ACOL
  1060 87D9 AD E1 89			lda C
  1061 87DC 8D CD 89			sta NEO6502.NEOSETCOLOR.XCOL
  1062 87DF A9 01			lda #$01
  1063 87E1 8D CE 89			sta NEO6502.NEOSETCOLOR.SOLID
  1064 87E4 8D CF 89			sta NEO6502.NEOSETCOLOR.SIZE
  1065 87E7 A9 00			lda #$00
  1066 87E9 8D D0 89			sta NEO6502.NEOSETCOLOR.FLIP
  1067 87EC 20 B9 82			jsr NEO6502.NEOSETCOLOR
  1068
  1069 				; optimize OK (palette.pas), line = 79
  1070
  1071 87EF AD DE 89			lda Y
  1072 87F2 18 69 0F			add #$0F
  1073 87F5 8D D7 89			sta NEO6502.NEODRAWRECT.Y1
  1074 87F8 A9 00			lda #$00
  1075 87FA 69 00			adc #$00
  1076 87FC 8D D8 89			sta NEO6502.NEODRAWRECT.Y1+1
  1077 87FF AD E5 89			lda X
  1078 8802 18 69 14			add #$14
  1079 8805 8D D5 89			sta NEO6502.NEODRAWRECT.X1
  1080 8808 AD E6 89			lda X+1
  1081 880B 69 00			adc #$00
  1082 880D 8D D6 89			sta NEO6502.NEODRAWRECT.X1+1
  1083 8810 AD E5 89			lda X
  1084 8813 8D D1 89			sta NEO6502.NEODRAWRECT.X0
  1085 8816 AD E6 89			lda X+1
  1086 8819 8D D2 89			sta NEO6502.NEODRAWRECT.X0+1
  1087 881C AD DE 89			lda Y
  1088 881F 8D D3 89			sta NEO6502.NEODRAWRECT.Y0
  1089 8822 A9 00			lda #$00
  1090 8824 8D D4 89			sta NEO6502.NEODRAWRECT.Y0+1
  1091 8827 20 E5 82			jsr NEO6502.NEODRAWRECT
  1092
  1093 				; optimize OK (palette.pas), line = 80
  1094
  1095 882A AD DF 89			lda I
  1096 882D D0 03 4C 51 89		jeq l_027F
  1097
  1098 				; optimize OK (palette.pas), line = 81
  1099
  1100 8832 A9 00			lda #$00
  1101 8834 85 04			sta @REAL_MUL.A
  1102 8836 AD DF 89			lda I
  1103 8839 38 E9 01			sub #$01
  1104 883C 85 05			sta @REAL_MUL.A+1
  1105 883E A9 00			lda #$00
  1106 8840 E9 00			sbc #$00
  1107 8842 85 06			sta @REAL_MUL.A+2
  1108 8844 A9 00			lda #$00
  1109 8846 E9 00			sbc #$00
  1110 8848 85 07			sta @REAL_MUL.A+3
  1111 884A A9 00			lda #$00
  1112 884C 85 0C			sta @REAL_MUL.B
  1113 884E A9 18			lda #$18
  1114 8850 85 0D			sta @REAL_MUL.B+1
  1115 8852 A9 00			lda #$00
  1116 8854 85 0E			sta @REAL_MUL.B+2
  1117 8856 85 0F			sta @REAL_MUL.B+3
  1118 8858 20 5B 80			jsr @REAL_MUL
  1119 885B A5 04			lda :eax
  1120 885D 8D E7 89			sta H
  1121 8860 A5 05			lda :eax+1
  1122 8862 8D E8 89			sta H+1
  1123 8865 A5 06			lda :eax+2
  1124 8867 8D E9 89			sta H+2
  1125 886A A5 07			lda :eax+3
  1126 886C 8D EA 89			sta H+3
  1127
  1128 				; optimize OK (palette.pas), line = 82
  1129
  1130 886F A9 00			lda #$00
  1131 8871 85 07			sta @REAL_DIV.A+3
  1132 8873 85 06			sta @REAL_DIV.A+2
  1133 8875 AD E0 89			lda J
  1134 8878 85 05			sta @REAL_DIV.A+1
  1135 887A A9 00			lda #$00
  1136 887C 85 04			sta @REAL_DIV.A
  1137 887E 85 0C			sta @REAL_DIV.B
  1138 8880 A9 10			lda #$10
  1139 8882 85 0D			sta @REAL_DIV.B+1
  1140 8884 A9 00			lda #$00
  1141 8886 85 0E			sta @REAL_DIV.B+2
  1142 8888 85 0F			sta @REAL_DIV.B+3
  1143 888A 20 50 81			jsr @REAL_DIV
  1144 888D A9 4D			lda #$4D
  1145 888F 85 0C			sta @REAL_MUL.B
  1146 8891 A9 00			lda #$00
  1147 8893 85 0D			sta @REAL_MUL.B+1
  1148 8895 85 0E			sta @REAL_MUL.B+2
  1149 8897 85 0F			sta @REAL_MUL.B+3
  1150 8899 20 5B 80			jsr @REAL_MUL
  1151 889C A9 B3			lda #$B3
  1152 889E 18 65 04			add :eax
  1153 88A1 8D EB 89			sta S
  1154 88A4 A9 00			lda #$00
  1155 88A6 65 05			adc :eax+1
  1156 88A8 8D EC 89			sta S+1
  1157 88AB A9 00			lda #$00
  1158 88AD 65 06			adc :eax+2
  1159 88AF 8D ED 89			sta S+2
  1160 88B2 A9 00			lda #$00
  1161 88B4 65 07			adc :eax+3
  1162 88B6 8D EE 89			sta S+3
  1163
  1164 				; optimize OK (palette.pas), line = 83
  1165
  1166 88B9 A9 00			lda #$00
  1167 88BB 85 07			sta @REAL_DIV.A+3
  1168 88BD 85 06			sta @REAL_DIV.A+2
  1169 88BF AD E0 89			lda J
  1170 88C2 85 05			sta @REAL_DIV.A+1
  1171 88C4 A9 00			lda #$00
  1172 88C6 85 04			sta @REAL_DIV.A
  1173 88C8 85 0C			sta @REAL_DIV.B
  1174 88CA A9 10			lda #$10
  1175 88CC 85 0D			sta @REAL_DIV.B+1
  1176 88CE A9 00			lda #$00
  1177 88D0 85 0E			sta @REAL_DIV.B+2
  1178 88D2 85 0F			sta @REAL_DIV.B+3
  1179 88D4 20 50 81			jsr @REAL_DIV
  1180 88D7 A9 E6			lda #$E6
  1181 88D9 85 0C			sta @REAL_MUL.B
  1182 88DB A9 00			lda #$00
  1183 88DD 85 0D			sta @REAL_MUL.B+1
  1184 88DF 85 0E			sta @REAL_MUL.B+2
  1185 88E1 85 0F			sta @REAL_MUL.B+3
  1186 88E3 20 5B 80			jsr @REAL_MUL
  1187 88E6 A9 1A			lda #$1A
  1188 88E8 18 65 04			add :eax
  1189 88EB 8D EF 89			sta V
  1190 88EE A9 00			lda #$00
  1191 88F0 65 05			adc :eax+1
  1192 88F2 8D F0 89			sta V+1
  1193 88F5 A9 00			lda #$00
  1194 88F7 65 06			adc :eax+2
  1195 88F9 8D F1 89			sta V+2
  1196 88FC A9 00			lda #$00
  1197 88FE 65 07			adc :eax+3
  1198 8900 8D F2 89			sta V+3
  1199
  1200 				; optimize OK (palette.pas), line = 84
  1201
  1202 8903 AD E7 89			lda H
  1203 8906 8D F3 89			sta HSVTORGB.H
  1204 8909 AD E8 89			lda H+1
  1205 890C 8D F4 89			sta HSVTORGB.H+1
  1206 890F AD E9 89			lda H+2
  1207 8912 8D F5 89			sta HSVTORGB.H+2
  1208 8915 AD EA 89			lda H+3
  1209 8918 8D F6 89			sta HSVTORGB.H+3
  1210 891B AD EB 89			lda S
  1211 891E 8D F7 89			sta HSVTORGB.S
  1212 8921 AD EC 89			lda S+1
  1213 8924 8D F8 89			sta HSVTORGB.S+1
  1214 8927 AD ED 89			lda S+2
  1215 892A 8D F9 89			sta HSVTORGB.S+2
  1216 892D AD EE 89			lda S+3
  1217 8930 8D FA 89			sta HSVTORGB.S+3
  1218 8933 AD EF 89			lda V
  1219 8936 8D FB 89			sta HSVTORGB.V
  1220 8939 AD F0 89			lda V+1
  1221 893C 8D FC 89			sta HSVTORGB.V+1
  1222 893F AD F1 89			lda V+2
  1223 8942 8D FD 89			sta HSVTORGB.V+2
  1224 8945 AD F2 89			lda V+3
  1225 8948 8D FE 89			sta HSVTORGB.V+3
  1226 894B 20 64 83			jsr HSVTORGB
  1227 894E 4C 84 89			jmp l_02BF
  1228 8951			l_027F
  1229
  1230 				; optimize OK (palette.pas), line = 86
  1231
  1232 8951 AD E0 89			lda J
  1233 8954 85 0C			sta :ecx
  1234 8956 A9 11			lda #$11
  1235 8958 85 04			sta :eax
  1236 					.ifdef fmulinit
  1237 					fmulu_8
  1238 					els
  1239 895A 20 03 80			imulCL
  1240 					eif
  1241 895D A5 04			lda :eax
  1242 895F 8D E2 89			sta RB
  1243
  1244 				; optimize OK (palette.pas), line = 87
  1245
  1246 8962 AD E0 89			lda J
  1247 8965 85 0C			sta :ecx
  1248 8967 A9 11			lda #$11
  1249 8969 85 04			sta :eax
  1250 					.ifdef fmulinit
  1251 					fmulu_8
  1252 					els
  1253 896B 20 03 80			imulCL
  1254 					eif
  1255 896E A5 04			lda :eax
  1256 8970 8D E3 89			sta GB
  1257
  1258 				; optimize OK (palette.pas), line = 88
  1259
  1260 8973 AD E0 89			lda J
  1261 8976 85 0C			sta :ecx
  1262 8978 A9 11			lda #$11
  1263 897A 85 04			sta :eax
  1264 					.ifdef fmulinit
  1265 					fmulu_8
  1266 					els
  1267 897C 20 03 80			imulCL
  1268 					eif
  1269 897F A5 04			lda :eax
  1270 8981 8D E4 89			sta BB
  1271 8984			l_02BF
  1272
  1273 				; optimize OK (palette.pas), line = 90
  1274
  1275 8984 AD E1 89			lda C
  1276 8987 8D D9 89			sta NEO6502.NEOSETPALETTE.COL
  1277 898A AD E2 89			lda RB
  1278 898D 8D DA 89			sta NEO6502.NEOSETPALETTE.R
  1279 8990 AD E3 89			lda GB
  1280 8993 8D DB 89			sta NEO6502.NEOSETPALETTE.G
  1281 8996 AD E4 89			lda BB
  1282 8999 8D DC 89			sta NEO6502.NEOSETPALETTE.B
  1283 899C 20 23 83			jsr NEO6502.NEOSETPALETTE
  1284
  1285 				; optimize FAIL (0, palette.pas), line = 91
  1286
  1287 899F EE E1 89			inc C
  1288
  1289 				; --- ForToDoEpilog
  1290 89A2 EE E0 89			inc J
  1291 89A5 F0 03 4C A8 87		jne l_0230
  1292 89AA			l_023E
  1293
  1294 				; --- ForToDoEpilog
  1295 89AA EE DF 89			inc I
  1296 89AD F0 03 4C 99 87		jne l_0219
  1297 89B2			l_0227
  1298
  1299 				; --- RepeatUntilProlog
  1300 89B2			l_02F9
  1301
  1302 				; optimize FAIL ('CRT.KEYPRESSED', palette.pas), line = 95
  1303
  1304 89B2 20 55 83			jsr CRT.KEYPRESSED
  1305 89B5 AD DD 89			lda CRT.KEYPRESSED.RESULT
  1306 89B8 F0 F8			jeq l_02F9
  1307
  1308 				; ------------------------------------------------------------
  1309
  1310 = 000F			CELL_H	= $0F
  1311 = 0014			CELL_W	= $14
  1312 = 89DE			Y	= DATAORIGIN+$0020
  1313 = 89DF			I	= DATAORIGIN+$0021
  1314 = 89E0			J	= DATAORIGIN+$0022
  1315 = 89E1			C	= DATAORIGIN+$0023
  1316 = 89E2			RB	= DATAORIGIN+$0024
  1317 = 89E3			GB	= DATAORIGIN+$0025
  1318 = 89E4			BB	= DATAORIGIN+$0026
  1319 = 89E5			X	= DATAORIGIN+$0027
  1320 = 89E7			H	= DATAORIGIN+$0029
  1321 = 89EB			S	= DATAORIGIN+$002D
  1322 = 89EF			V	= DATAORIGIN+$0031
  1323 89BA			@exit
  1324
  1325 89BA A2 00		@halt	ldx #$00
  1326 89BC 9A				txs
  1327
  1328 89BD 60				rts
  1329
  1330 				; ------------------------------------------------------------
  1331
  1332 				; ------------------------------------------------------------
  1333
  1334 89BE			.local	@DEFINES
  1335 89BE			NEO
  1336 				.endl
  1337
  1338 89BE			.local	@RESOURCE
  1339 				.endl
  1340
  1341 				.endl							; MAIN
  1342
  1343 				; ------------------------------------------------------------
  1344 				; ------------------------------------------------------------
  1345
  1346 				.macro	UNITINITIALIZATION
  1347 				
  1348 					.ifdef MAIN.SYSTEM.@UnitInit
  1349 					jsr MAIN.SYSTEM.@UnitInit
  1350 					.fi
  1351 				
  1352 					.ifdef MAIN.NEO6502.@UnitInit
  1353 					jsr MAIN.NEO6502.@UnitInit
  1354 					.fi
  1355 				
  1356 					.ifdef MAIN.CRT.@UnitInit
  1357 					jsr MAIN.CRT.@UnitInit
  1358 					.fi
  1359 				.endm
  1360
  1361 				; ------------------------------------------------------------
  1362
  1363 					ift .SIZEOF(MAIN.SYSTEM) > 0
  1364 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  1365 					eif
  1366
  1367 					ift .SIZEOF(MAIN.NEO6502) > 0
  1368 					.print 'NEO6502: ',MAIN.NEO6502,'..',MAIN.NEO6502+.SIZEOF(MAIN.NEO6502)-1
  1368 				NEO6502: $829A..$8354
  1369 					eif
  1370
  1371 					ift .SIZEOF(MAIN.CRT) > 0
  1372 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
  1372 				CRT: $8355..$8363
  1373 					eif
  1374
  1375 				.nowarn	.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  1375 				CODE: $8003..$89BD
  1376
  1377 				; ------------------------------------------------------------
  1378
  1379 = 89BE				?adr = *
  1380 					ift (?adr < ?old_adr) && (?old_adr - ?adr < $120)
  1381 					?adr = ?old_adr
  1382 					eif
  1383
  1384 					org ?adr
  1385 = 89BE				?old_adr = *
  1386
  1387 89BE			DATAORIGIN
  1388 89BE 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  1389
  1390 = 0006			VARINITSIZE	= *-DATAORIGIN
  1391 = 005F			VARDATASIZE	= 95
  1392
  1393 = 8A1D			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  1394
  1395 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  1395 				DATA: $89BE..$8A1D
  1396
  1397 				; ------------------------------------------------------------
  1398
  1399 				.macro	STATICDATA
  1400 				.endm
  1401
  1402 					end
