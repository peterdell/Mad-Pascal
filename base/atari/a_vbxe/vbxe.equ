;###################################################################################################################
;
;
;	   ##	 #######   ##	 #####	  ###		 ######	  ####	 #    #	   ##	 ####### ######	  ####
;	  #  #	 #  #  #  #  #	  #   #	   #		  #   #	 #    #	 #    #	  #  #	 #  #  #  #   #	 #    #
;	 #    #	    #	 #    #   #   #	   #		  # #	 #    #	 #    #	 #    #	    #	  # #	 #
;	 #    #	    #	 #    #	  ####	   #		  ###	 #    #	 #    #	 #    #	    #	  ###	  ####
;	 ######	    #	 ######   # #	   #		  # #	 #  # #	 #    #	 ######	    #	  # #	      #
;	 #    #	    #	 #    #	  #  #	   #		  #   #	  ####	 #    #	 #    #	    #	  #   #	 #    #
;	 #    #	   ###	 #    #	 ###  #	  ###		 ######	      ##  ####	 #    #	   ###	 ######	  ####
;
;	VBXE Equates
;###################################################################################################################

; VBXE equates
vbxe_mem_base	equ	$B000			; If I put it here, it should be OK and it won't conflict with the extended RAM.

vbxe_screen_top	equ	vbxe_mem_base + 256	; points to where the first character of the screen would be


; VBXE equates
core_version	equ	$40			; tells us whether FX or GTIA-emu core
minor_revision	equ	$41			; tells us minor revision number (like 26 in 1.26)

; memory window B control register
; bit 0 - 4 - bank number (banks are all 16K)
; bit 6 - MBAE - ANTIC access enable
; bit 7 - MBCE - CPU access enable

memac_b_control	equ	$5D

; memory window A control register
; bit 0 and 1 - window size - 00 for 4K, 01 for 8K, 10 for 16K, 11 for 32K
; bit 2 - MAE - when set, antic can see VBXE RAM
; bit 3 - MCE - when set, CPU can see VBXE RAM

memac_control	equ	$5E

memac_bank_sel	equ	$5F			; controls bank number of movable window (MEMAC A). bit 7 is an enable bit
csel		equ	$44			; selects current color number for write
psel		equ	$45			; selects the pallette number to load into
cr		equ	$46			; red component value
cg		equ	$47			; green component value
cb		equ	$48			; blue component value
xdl_adr		equ	$41			; xdl address registers (3 consecutive)

; video control register
; bit 0 - xdl_enabled - set to enable XDL
; bit 1 - xcolor - set to enable 16 luminances and separate ANTIC hi-res foreground and background hues
; bit 2 - no_trans - clear means color 0 is transparent
; bit 3	- trans15 - allows additional transparent colors. only works when no_trans is 0

video_control	equ	$40

colmask		equ	$49			; AND mask for collisions with GTIA/ANTIC and VBXE stuff
colclr		equ	$4A			; clears coldetect (any value written here)
coldetect	equ	$4A			; collisions detected.
blt_adr		equ	$50			; blitter list address (3 bytes, consecutive)
blt_collision	equ	$50			; collision codes that blitter has set
blt_start	equ	$53			; bit 0 set to start blitter
blt_busy	equ	$53			; bit 1 for busy, bit 0 for BCB load. register will read 0 when blitter is stopped.
irq_control	equ	$54			; set bit 0 to enable blitter IRQ
irq_status	equ	$54			; bit 0 set means blitter threw an IRQ
P0		equ	$55			; priority select registers when attribute map is enabled.
P1		equ	$56
P2		equ	$57
P3		equ	$58


.STRUCT	BCB
src_adr		.long
src_step_y	.word
src_step_x	.byte
dest_adr	.long
dest_step_y	.word
dest_step_x	.byte
blt_width	.word
blt_height	.byte
blt_and_mask	.byte
blt_xor_mask	.byte
blt_coll_mask	.byte
blt_zoom	.byte
pattern_feature	.byte
blt_control	.byte
.ENDS